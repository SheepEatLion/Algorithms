import sys
tc = int(sys.stdin.readline())
dp = [0] * 102
dp[1] = 1
dp[2] = 1
dp[3] = 1
start = 4  # for 문의 시작점을 기록할 변수
for _ in range(tc):
    n = int(sys.stdin.readline())
    if dp[n] != 0:  # n이 이미 구해둔 값이라면 그냥 인덱싱한다.
        print(dp[n])
        continue
    for i in range(start, n + 1):
        dp[i] = dp[i-2] + dp[i-3]
    print(dp[n])
    start = n  # 이번에 구한 n 지점까지를 다음 시작점으로 한다.
'''
이 문제는 좀 더 친절했다. 삼각형의 긴 변의 길이가 어쩌구 저쩌구로 출발하지만
1, 1, 1, 2, 2, 3, 4, 5, 7, 9 라는 규칙을 아예 문제에서 보여준다.
n = n-2 + n-3 의 구조라는 걸 단박에 알아차릴 수 있었다.
대신 1904문제와는 다르게 입력크기가 100까지 밖에 안되서 dp 배열을 사용 가능했는데 그렇다고 해도 당장 현재 값만 구하는 거라면 변수 3개만 가지고도 할 수 있고 더 빠를 지도 모른다. 
그러나 1904문제완 달리 겉보기엔 당장 주어진 n 값만 구하는 것처럼 보여도
이 문제는 tc 개수만큼 반복하기 때문에 만약 n이 처음에 100이고 그 다음에 50이 들어온다면
n을 구할때 이미 구해둔 50을 사용할 수 있기 때문에 리스트로 구하는 게 더 효율적이다. 
'''